{"version":3,"sources":["imgs/twitterMaginfier.png","imgs/BlueSearch.svg","actions/types.js","actions/index.js","components/MainCard.js","icons/Brand.js","components/Header.js","components/GraphSection/BarChart.js","components/GraphSection/IOSSwitch.js","components/GraphSection/Index.js","components/EmbededTweet.js","components/TweetAnalysis.js","components/CircularLoader.js","pages/AnalysisPage.js","styles/GlobalStyles.js","reducers/documentReducer.js","reducers/authorReducer.js","reducers/sentencesReducer.js","reducers/loadingReducer.js","reducers/analysisTypeReducer.js","reducers/createdTimeReducer.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_DOCUMENT","ADD_SENTENCE","ADD_AUTHOR","SET_LOADING","SWITCH_ANALYSIS","ADD_CREATED_TIME","CLEAR_SENTENCES","getSentimentData","tweetUid","dispatch","a","type","payload","sentenceCounter","axios","post","res","data","twitter","user","tweet","createdTime","google","sentences","map","sentence","sentencePayload","sentenceData","score","sentiment","magnitude","content","text","sentenceIndex","console","log","window","alert","Root","styled","div","Card","BrandBackground","Heading","SearchBar","input","SearchIcon","Spacing","ErrorMessage","SuggestionBox","SearchWrapper","connect","state","document","documentContents","documentScore","documentMagnitude","clearSentences","props","useState","analyzed","setanalyzed","initialValues","validationSchema","Yup","matches","required","onSubmit","values","actions","split","length","handleSubmission","resetForm","handleSubmit","onChange","handleChange","onBlur","handleBlur","value","name","placeholder","errors","touched","Brand","version","xmlns","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","BrandWrapper","NavlinkWrapper","activeClassName","StyledLink","NavLink","attrs","Header","exact","to","ChartWrapper","BarChart","ref","useRef","labels","datasets","label","title","lineTension","backgroundColor","borderColor","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","IOSSwitch","withStyles","theme","root","padding","margin","spacing","switchBase","color","palette","common","white","opacity","border","grey","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","AnalysisWrapper","SwitchWrapper","ToggleWrapper","ButtonHeading","loading","author","profileName","image","profileImage","contents","tweetMetaData","documentSentences","sentencesByIndex","analysisType","documentAnalysis","switchAnalysisType","currentType","toggleAnalysis","documentData","sentenceLabels","push","forEach","Math","round","Number","EPSILON","sentenceLabel","slice","concat","renameSentences","applicationLoading","AnalysisContainer","AnalysisHeader","header","AnalysisCard","AnalysisUserInfo","AnalysisTweetText","AnalysisTweetMeta","EmbeddedTweet","src","details","alt","style","useStylesFacebook","makeStyles","position","bottom","top","animationDuration","left","circle","strokeLinecap","CircularLoader","className","CircularProgress","variant","size","thickness","disableShrink","useStyles","backdrop","zIndex","setTweetSearched","Backdrop","open","GlobalStyle","createGlobalStyle","initialState","appReducer","combineReducers","action","documentSentiment","profile_name","url","filter","store","createStore","composeWithDevTools","applyMiddleware","reduxThunk","logger","App","path","component","AnalysisPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd0a4ccf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitterMaginfier.13bcc0d1.png\";","export default __webpack_public_path__ + \"static/media/BlueSearch.4553f7b7.svg\";","export const ADD_DOCUMENT = \"add_document\";\nexport const ADD_SENTENCE = \"add_sentence\";\nexport const ADD_AUTHOR = \"add_author\";\nexport const SET_LOADING = \"set_loading\";\nexport const SWITCH_ANALYSIS = \"switch_analysis\";\nexport const ADD_CREATED_TIME = \"add_created_time\";\nexport const CLEAR_SENTENCES = \"clear_sentences\"","import axios from \"axios\";\nimport {\n  ADD_DOCUMENT,\n  ADD_AUTHOR,\n  ADD_SENTENCE,\n  SET_LOADING,\n  SWITCH_ANALYSIS,\n  ADD_CREATED_TIME,\n  CLEAR_SENTENCES,\n} from \"./types\";\n\nexport const getSentimentData = (tweetUid) => async (dispatch) => {\n  try {\n    dispatch({ type: SET_LOADING, payload: true });\n    let sentenceCounter = 0;\n    const res = await axios.post(`/analyze/twitter/${tweetUid}`);\n    dispatch({ type: ADD_AUTHOR, payload: res.data.twitter.user });\n\n    dispatch({ type: ADD_DOCUMENT, payload: res.data });\n\n    dispatch({\n      type: ADD_CREATED_TIME,\n      payload: res.data.twitter.tweet.createdTime,\n    });\n\n    res.data.google.sentences.map((sentence) => {\n      const sentencePayload = {\n        sentenceData: {\n          score: sentence.sentiment.score,\n          magnitude: sentence.sentiment.magnitude,\n          content: sentence.text.content,\n        },\n        sentenceIndex: sentenceCounter,\n      };\n      dispatch({ type: ADD_SENTENCE, payload: sentencePayload });\n      sentenceCounter++;\n    });\n    dispatch({ type: SET_LOADING, payload: false });\n  } catch (err) {\n    console.log(err);\n    dispatch({ type: SET_LOADING, payload: false });\n    window.alert(\"Something wrong with the twitter link\");\n  }\n};\n\nexport const switchAnalysisType = (currentType) => (dispatch) => {\n  dispatch({ type: SWITCH_ANALYSIS, payload: !currentType });\n};\n\nexport const clearSentences = () => (dispatch) => {\n  dispatch({ type: CLEAR_SENTENCES });\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport BrandBackground from \"../imgs/twitterMaginfier.png\";\nimport { Formik } from \"formik\";\nimport SearchIcon from \"../imgs/BlueSearch.svg\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { getSentimentData, clearSentences } from \"../actions\";\n\nconst Root = styled.div`\n  background-color: #515151;\n  height: 650px;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n//fix backgrond position on smaller screens\nconst Card = styled.div`\n  background-color: #3d3838;\n  height: 400px;\n  width: 70vw;\n  background-image: url(${BrandBackground});\n  background-repeat: no-repeat;\n  background-position: 70% 50%;\n  background-size: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  border-radius: 25px;\n  padding: 35px;\n  z-index: 1;\n\n  @media (max-width: 500px) {\n    width: 85vw;\n  }\n`;\n\nconst Heading = styled.div`\n  color: white;\n  font-size: 50px;\n  font-family: aktiv-grotesk;\n  width: 300px;\n\n  @media (min-width: 1000px) {\n    margin-left: 20px;\n  }\n`;\n\nconst SearchBar = styled.input`\n  padding: 25px;\n  padding-left: 60px;\n  font-family: aktiv-grotesk;\n  height: 65px;\n  width: 50vw;\n  z-index: 2;\n  border-radius: 25px;\n  outline: none;\n  background-image: url(${SearchIcon});\n  background-repeat: no-repeat;\n  background-position: 15px 17px;\n  border: none;\n  font-size: 20.0952px;\n  line-height: 26px;\n  /* identical to box height */\n\n  color: #434343;\n\n  @media (max-width: 500px) {\n    width: 85vw;\n  }\n`;\n\nconst Spacing = styled.div`\n  padding: 15px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  font-size: 16px;\n  font-family: aktiv-grotesk;\n  padding: 5px;\n`;\n\nconst SuggestionBox = styled.div`\n  color: white;\n  font-size: 16px;\n  font-family: aktiv-grotesk;\n  padding: 10px;\n  width: 85%;\n  height: 48px;\n  background: rgba(196, 196, 196, 0.25);\n  border-radius: 25px;\n  text-align: center;\n\n  @media (max-width: 700px) {\n    font-size: 11px;\n    height: 48px;\n    width: 95%;\n  }\n`;\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MainCard = (props) => {\n  const [analyzed, setanalyzed] = useState(false);\n\n  const handleSubmission = (values) => {\n    if (props.document.documentContents != null) {\n      props.clearSentences();\n    }\n    setanalyzed(true);\n    const tweetUid = values.tweet.split(\"/\")[\n      values.tweet.split(\"/\").length - 1\n    ];\n    props.getSentimentData(tweetUid);\n  };\n\n  return (\n    <Root>\n      {console.log(props.document.documentScore, \"props.document \")}\n      <Card>\n        <Heading> Learn about your Tweets. </Heading>\n      </Card>\n      <Spacing />\n      <Formik\n        initialValues={{ tweet: \"\" }}\n        validationSchema={Yup.object({\n          tweet: Yup.string()\n            .matches(\n              /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n              \"Pleases enter a Tweet URL\"\n            )\n            .required(\"Please enter a Tweet URL\"),\n        })}\n        onSubmit={(values, actions) => {\n          console.log(values.tweet);\n          handleSubmission(values);\n          actions.resetForm();\n        }}\n      >\n        {(props) => (\n          <form onSubmit={props.handleSubmit}>\n            <SearchWrapper>\n              <SearchBar\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.tweet}\n                name=\"tweet\"\n                placeholder=\"enter a tweet url\"\n              />\n              {props.errors.tweet && props.touched.tweet ? (\n                <ErrorMessage>{props.errors.tweet}</ErrorMessage>\n              ) : null}\n              {!props.touched.tweet && !props.errors.tweet && !analyzed ? (\n                <>\n                  <Spacing />\n                  <SuggestionBox>\n                    Can't come up with a URL? Try this one\n                    https://twitter.com/nodejs/status/1357731296055803904\n                  </SuggestionBox>\n                </>\n              ) : null}\n            </SearchWrapper>\n          </form>\n        )}\n      </Formik>\n    </Root>\n  );\n};\n\nfunction mapStatetoProps(state) {\n  return {\n    document: {\n      documentContents: state.document.documentContents,\n      documentScore: state.document.documentScore,\n      documentMagnitude: state.document.documentMagnitude,\n    },\n  };\n}\nexport default connect(mapStatetoProps, { getSentimentData, clearSentences })(\n  MainCard\n);\n","import React from \"react\";\n\nconst Brand = () => {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25.000000pt\"\n      height=\"35.000000pt\"\n      viewBox=\"0 0 25.000000 35.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g\n        transform=\"translate(0.000000,35.000000) scale(0.100000,-0.100000)\"\n        fill=\"#000000\"\n        stroke=\"none\"\n      >\n        <path\n          d=\"M88 334 c-31 -17 -58 -61 -58 -97 0 -13 11 -41 25 -61 20 -29 23 -41\n15 -57 -6 -10 -14 -19 -19 -19 -4 0 -17 -18 -29 -39 -18 -32 -20 -40 -7 -44\n15 -6 35 19 68 84 16 30 22 35 46 31 56 -8 121 50 121 108 0 34 -28 78 -60 95\n-36 19 -67 19 -102 -1z m101 -8 c47 -25 63 -83 37 -135 -35 -66 -137 -66 -172\n0 -47 91 44 182 135 135z\"\n        />\n        <path\n          d=\"M91 284 c-52 -66 7 -138 84 -104 14 6 8 7 -20 4 -52 -7 -80 19 -70\n65 14 66 115 71 115 5 0 -12 -7 -28 -17 -35 -15 -13 -16 -11 -10 21 7 34 6 36\n-23 38 -24 2 -33 -3 -42 -23 -15 -32 0 -49 45 -51 41 -3 57 11 57 47 0 61 -80\n83 -119 33z m69 -33 c0 -10 -7 -24 -16 -32 -13 -10 -17 -10 -24 1 -11 18 6 50\n25 50 8 0 15 -8 15 -19z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Brand;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"../icons/Brand\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Root = styled.div`\n  background-color: #6b6b6b;\n  height: 65px;\n  width: 100vw;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  /*position: fixed;*/\n  top: 0px;\n  z-index: 40;\n`;\n\nconst BrandWrapper = styled.div`\n  padding-left: 50px;\n`;\n\nconst NavlinkWrapper = styled.div`\n  padding-left: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 150px;\n`;\n\nconst activeClassName = \"nav-item-active\";\n\nconst StyledLink = styled(NavLink).attrs({ activeClassName })`\n  &.${activeClassName} {\n    border-bottom: 2px solid #5dd7fc;\n  }\n  text-decoration: none;\n  color: white;\n`;\n\n//flex\n\nconst Header = () => {\n  return (\n    <Root>\n      <BrandWrapper>\n        <Brand />\n      </BrandWrapper>\n      <NavlinkWrapper>\n        <StyledLink exact to=\"/\">\n          Tweetsis\n        </StyledLink>\n      </NavlinkWrapper>\n    </Root>\n  );\n};\n\nexport default Header;\n","import React, { useRef } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  width:100%;\n  background-color: #cccccc;\n`;\n\nconst BarChart = (props) => {\n  const ref = useRef(\"chart\");\n\n  const data = {\n    labels: props.labels,\n    datasets: [\n      {\n        label: props.title,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: props.data,\n      },\n    ],\n  };\n\n  return (\n    <ChartWrapper>\n      <Bar ref={ref} data={data} />\n    </ChartWrapper>\n  );\n};\n\nBarChart.propTypes = {\n  labels: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\n\nexport default BarChart;\n","import { withStyles } from '@material-ui/core/styles';\nimport {Switch} from '@material-ui/core';\n\nexport const IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 28,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(22px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#434343',\n        opacity: 1,\n        border: `1px solid ${theme.palette.grey[400]}`,\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#434343',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 26,\n    height: 26,\n  },\n  track: {\n    borderRadius: 28 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: \"#5DD7FC\",\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\n\nexport default IOSSwitch","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport BarChart from \"./BarChart\";\nimport IOSSwitch from \"./IOSSwitch\";\nimport { connect } from \"react-redux\";\nimport { switchAnalysisType } from \"../../actions\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AnalysisWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 60vw;\n  background-color: #cccccc;\n  @media (max-width: 500px) {\n    width: 85vw;\n  }\n`;\n\nconst SwitchWrapper = styled.div`\n  display: flex;\n  width: 50vw;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ButtonHeading = styled.div`\n  font-family: aktiv-grotesk;\n  color: white;\n  font-size: 12px;\n`;\n\nconst Index = (props) => {\n  const [documentAnalysis, toggleAnalysis] = useState(\n    props.analysisType.documentAnalysis\n  );\n  let documentData = [];\n  let sentenceData = [];\n  let sentenceLabels = [];\n\n  const handleDocumentData = () => {\n    // if document score is below 0 changes the bounds to (-1, 1)\n    if (props.document.documentScore < 0) {\n      documentData.push(\n        props.document.documentScore,\n        props.document.documentMagnitude,\n        -1,\n        1\n      );\n    } else {\n      documentData.push(\n        props.document.documentScore,\n        props.document.documentMagnitude,\n        0,\n        1\n      );\n    }\n  };\n\n  const renameSentences = (sentence) => {\n    if (sentence.length > 20) {\n      let slicedSentence = sentence.slice(0, 21);\n      let sentenceLabel = slicedSentence.concat(\"...\");\n      return sentenceLabel;\n    } else {\n      return sentence;\n    }\n  };\n\n  const handleSentenceData = () => {\n    props.documentSentences.sentences.forEach((sentence) => {\n      // Number.EPSILON represents the difference between 1 and the smallest floating point number greater than 1.\n      // https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-only-if-necessary\n      sentenceData.push(\n        Math.round((sentence.score + Number.EPSILON) * 100) / 100\n      );\n      const sentenceLabel = renameSentences(sentence.content);\n      sentenceLabels.push(sentenceLabel);\n    });\n    sentenceData.push(0, 1);\n  };\n\n  const handleAnalysisChange = () => {\n    toggleAnalysis(!documentAnalysis);\n    props.switchAnalysisType(props.analysisType.documentAnalysis);\n  };\n\n  return (\n    <Root>\n      {handleDocumentData()}\n      {handleSentenceData()}\n      <SwitchWrapper>\n        <ToggleWrapper>\n          <ButtonHeading>\n            switch to{\" \"}\n            {props.analysisType.documentAnalysis ? \"sentences\" : \"document\"}{\" \"}\n          </ButtonHeading>\n          <IOSSwitch\n            checked={documentAnalysis}\n            onChange={handleAnalysisChange}\n          />\n        </ToggleWrapper>\n      </SwitchWrapper>\n      <AnalysisWrapper>\n        {!props.loading.applicationLoading ? (\n          props.analysisType.documentAnalysis ? (\n            <BarChart\n              labels={[\"sentiment score\", \"magnitude\"]}\n              data={documentData}\n              title={\"Document\"}\n            />\n          ) : (\n            <BarChart\n              labels={sentenceLabels}\n              data={sentenceData}\n              title={\"Sentence sentiment score\"}\n            />\n          )\n        ) : null}\n      </AnalysisWrapper>\n    </Root>\n  );\n};\n\nfunction mapStatetoProps(state) {\n  return {\n    loading: state.loading,\n    author: {\n      profileName: state.author.profileName,\n      name: state.author.name,\n      image: state.author.profileImage,\n    },\n    tweet: {\n      contents: state.document.documentContents,\n      createdTime: state.tweetMetaData.createdTime,\n    },\n    document: {\n      documentContents: state.document.documentContents,\n      documentScore: state.document.documentScore,\n      documentMagnitude: state.document.documentMagnitude,\n    },\n    documentSentences: {\n      sentences: state.documentSentences.sentences,\n      sentencesByIndex: state.documentSentences.sentencesByIndex,\n    },\n    analysisType: {\n      documentAnalysis: state.analysisType.documentAnalysis,\n    },\n  };\n}\n\nexport default connect(mapStatetoProps, { switchAnalysisType })(Index);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// flexbox container for the analysis card\nconst AnalysisContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap; // shorthand for flex-direction and flex-wrap\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 15px;\n`;\n\n// \"Sentiment Analysis header for the card\"\nconst AnalysisHeader = styled.header`\n  font-size: 40px;\n  font-family: Al Tarikh;\n  color: #ffffff;\n  background-color: #6b6b6b;\n  flex: 1 0 100%;\n  text-align: center;\n  padding-bottom: 15px;\n`;\n\n// the actual card, which just defines some padding and the background color\nconst AnalysisCard = styled.div`\n  background-color: #15212b;\n  height: auto;\n  border-radius: 25px;\n  padding-left: 5%;\n  padding-right: 5%;\n\n  @media (max-width: 500px) {\n    width: 345px;\n  }\n`;\n\n// formatting for user info: right now, this is just the user profile name\nconst AnalysisUserInfo = styled.div`\n  color: white;\n  font-size: 20px;\n  font-family: aktiv-grotesk;\n  padding-top: 5%;\n`;\n\n// styling for the text from the tweet\nconst AnalysisTweetText = styled.div`\n  font-size: 16px;\n  color: white;\n  text-align: left;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 400px;\n  padding-top: 5%;\n\n  @media (max-width: 500px) {\n    width: 310px;\n  }\n`;\n\n// formatting for meta-data of the tweet. Right now this is just the time the tweet was created\nconst AnalysisTweetMeta = styled.div`\n  font-size: 14px;\n  color: #798896;\n  padding-top: 5%;\n  padding-bottom: 5%;\n`;\n\nconst EmbeddedTweet = (props) => {\n  return (\n    <AnalysisContainer>\n      <AnalysisHeader>Sentiment Analysis</AnalysisHeader>\n      <AnalysisCard>\n        <AnalysisUserInfo>\n          {/* !  IMAGE IS COMMENTED OUT BELOW */}\n          <img\n            height=\"65\"\n            width=\"65\"\n            src={props.details.author.image}\n            alt=\"Twitter Profile\"\n            style={{ borderRadius: 15 }}\n          ></img>\n          @{props.details.author.profileName}:\n        </AnalysisUserInfo>\n        <AnalysisTweetText>{props.details.tweet.contents}</AnalysisTweetText>\n        <AnalysisTweetMeta>{props.details.tweet.createdTime}</AnalysisTweetMeta>\n      </AnalysisCard>\n    </AnalysisContainer>\n  );\n};\n\nexport default EmbeddedTweet;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getSentimentData } from \"../actions\";\nimport GraphSection from \"./GraphSection/Index\";\nimport EmbeddedTweet from \"./EmbededTweet\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  background-color: #6b6b6b;\n`;\nconst AnalysisWrapper = styled.div`\n  display: flex;\n  padding-top: 35px;\n  padding-bottom: 35px;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TweetAnalysis = (props) => {\n  return (\n    <Root>\n      <AnalysisWrapper>\n        <EmbeddedTweet details={props} />\n        <GraphSection />\n      </AnalysisWrapper>\n    </Root>\n  );\n};\n//props.setTweetSearched function to set tgrue when searched\n\nfunction mapStatetoProps(state) {\n  return {\n    loading: state.loading,\n    author: {\n      profileName: state.author.profileName,\n      name: state.author.name,\n      image: state.author.profileImage,\n    },\n    tweet: {\n      contents: state.document.documentContents,\n      createdTime: state.tweetMetaData.createdTime,\n    },\n    document: {\n      documentContents: state.document.documentContents,\n      documentScore: state.document.documentScore,\n      documentMagnitude: state.document.documentMagnitude,\n    },\n    documentSentences: {\n      sentences: state.documentSentences.sentences,\n      sentencesByIndex: state.documentSentences.sentencesByIndex,\n    },\n    analysisType: {\n      documentAnalysis: state.analysisType.documentAnalysis,\n    },\n  };\n}\n\nexport default connect(mapStatetoProps, { getSentimentData })(TweetAnalysis);\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Inspired by the former Facebook spinners.\nconst useStylesFacebook = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  top: {\n    color: '#1a90ff',\n    animationDuration: '550ms',\n    position: 'absolute',\n    left: 0,\n  },\n  circle: {\n    strokeLinecap: 'round',\n  },\n}));\n\n\n\nconst CircularLoader = (props) => {\n  const classes = useStylesFacebook();\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        className={classes.bottom}\n        size={40}\n        thickness={4}\n        {...props}\n        value={100}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={40}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default CircularLoader\n\n\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport MainCard from \"../components/MainCard\";\nimport Header from \"../components/Header\";\nimport TweetAnalysis from \"../components/TweetAnalysis\";\nimport { connect } from \"react-redux\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularLoader from \"../components/CircularLoader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 100vh;\n  width: 100vw;\n  background-color: #6b6b6b;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: 50,\n    color: \"#fff\",\n  },\n}));\n\nconst AnalysisPage = (props) => {\n  const [tweetSearched, setTweetSearched] = useState(false);\n  const classes = useStyles();\n  return (\n    <Root>\n      <Backdrop\n        className={classes.backdrop}\n        open={props.loading.applicationLoading}\n      >\n        <CircularLoader />\n      </Backdrop>\n      <Header />\n      <MainCard setTweetSearched={setTweetSearched} />\n      {props.document.documentScore != null ? <TweetAnalysis /> : null}\n    </Root>\n  );\n};\n\nfunction mapStatetoProps(state) {\n  return {\n    document: state.document,\n    sentences: state.sentences,\n    analysisType: state.analysisType,\n    loading: state.loading,\n  };\n}\n\nexport default connect(mapStatetoProps)(AnalysisPage);\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * Global styles for the application\n */\nexport const GlobalStyle = createGlobalStyle`\n\n  html {\n    box-sizing: border-box;\n    overflow-x:hidden;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    margin: 0;\n  }\n\n  #root {\n    position: relative;\n    min-height: 100vh;\n  }\n`;","import { ADD_DOCUMENT } from \"../actions/types\";\n\nconst initialState = {\n  documentContents: null,\n  documentScore: null,\n  documentMagnitude: null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_DOCUMENT:\n      return {\n        ...state,\n        documentContents: action.payload.twitter.tweet.text,\n        documentScore: action.payload.google.documentSentiment.score,\n        documentMagnitude: action.payload.google.documentSentiment.magnitude,\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_AUTHOR } from \"../actions/types\";\n\nconst initialState = {\n  name: null,\n  profileName: null,\n  profileImage: null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_AUTHOR:\n      return {\n        ...state,\n        name: action.payload.name,\n        profileName: action.payload.profile_name,\n        profileImage: action.payload.url,\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_SENTENCE, CLEAR_SENTENCES } from \"../actions/types\";\n\nconst initialState = {\n  sentences: [],\n  sentencesByIndex: [],\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_SENTENCE:\n      return {\n        ...state,\n        sentences: [...state.sentences, action.payload.sentenceData],\n        sentencesByIndex: [\n          ...state.sentencesByIndex,\n          action.payload.sentenceIndex,\n        ],\n      };\n    case CLEAR_SENTENCES:\n      return {\n        ...state,\n        sentences: state.sentences.filter((sentence) => sentence.content === 1),\n        sentencesByIndex: state.sentencesByIndex.filter(\n          (sentenceIndex) => sentenceIndex.content === \"\"\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_LOADING } from \"../actions/types\";\n\nconst initialState = {\n  applicationLoading: false,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        applicationLoading: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { SWITCH_ANALYSIS } from \"../actions/types\";\n\nconst initialState = {\n  documentAnalysis: true,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SWITCH_ANALYSIS:\n      return {\n        ...state,\n        documentAnalysis: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CREATED_TIME } from \"../actions/types\";\n\nconst initialState = {\n  createdTime: null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_CREATED_TIME:\n      return {\n        ...state,\n        createdTime: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport documentReducer from \"./documentReducer\";\nimport authorReducer from \"./authorReducer\";\nimport sentencesReducer from \"./sentencesReducer\";\nimport loadingReducer from \"./loadingReducer\";\nimport analysisTypeReducer from \"./analysisTypeReducer\"\nimport createdTimeReducer from \"./createdTimeReducer\"\n\nexport const appReducer = combineReducers({\n  document: documentReducer,\n  author: authorReducer,\n  documentSentences: sentencesReducer,\n  loading: loadingReducer,\n  analysisType: analysisTypeReducer,\n  tweetMetaData: createdTimeReducer\n});\n\nexport default appReducer;\n","import AnalysisPage from \"./pages/AnalysisPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport appReducer from \"./reducers\";\nimport reduxThunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  appReducer,\n  composeWithDevTools(applyMiddleware(reduxThunk, logger))\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <GlobalStyle />\n        <Switch>\n          <Route exact path=\"/\" component={AnalysisPage} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport axios from \"axios\";\nwindow.axios = axios;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}